version: "1.0"
steps:
  # git_clone:
  #   type: git-clone
  #   title: Clone ccw-repeater-example from GitHub
  #   repo: TeselaGen/ccw-repeater-example
  gen_npmrc:
    title: "Generate .npmrc from env vars"
    image: node:10.11.0
    commands:
      - pwd
      - ls -al
      - yarn
      - yarn npmrc-from-env
      - ls -al
    working_directory: ${{main_clone}}
  build_image:
    title: Building Image
    type: build
    #Important: rename this image to to a valid repository in your registry. For example: myUserName/vote
    image_name: teselagen/ccw-repeater
    #The directory should be relative to git repository that is used for cloning
    working_directory: ${{main_clone}}
    #Dockerfile location should be relative to the working directory
    dockerfile: Dockerfile
  build_cypress_image:
    title: Building Cypress Image
    type: build
    #Important: rename this image to to a valid repository in your registry. For example: myUserName/vote
    image_name: teselagen/ccw-repeater-cypress
    #The directory should be relative to git repository that is used for cloning
    working_directory: ${{main_clone}}/e2e-tests
    #Dockerfile location should be relative to the working directory
    dockerfile: Dockerfile
  run_app_and_tests: 
    type: composition
    composition-candidates: 
      cypress_tests: 
        image: ${{build_cypress_image}}
        environment:
            TEST_URL: http://app:3000
    composition:
      version: '2'
      services:
        app:
          image: ${{build_image}}
          environment:
            PORT: 3000
            CLIENT_MODE: prod
            AUTO_INIT_DB: 1
            SKIP_PG_SSL: 1
            DATABASE_URL: postgres://echo:ThisIsASecret@pg_db:5432/postgres
          ports:
            - "3081:3000"
          depends_on:
            - pg_db
        pg_db:
          image: postgres:9.6-alpine
          restart: always
          environment:
            POSTGRES_USER: echo
            POSTGRES_PASSWORD: ThisIsASecret
          ports:
            - "5443:5432"
    fail_fast: false
    # when:
    #   condition:
    #     all:
    #       notFeatureBranch: 'match("${{CF_BRANCH}}", "/FB-/", true) == false'
    # on_success:
    #   ...
    # on_fail:
    #   ...
    # on_finish:
    #   ...
    # retry:
    #   ...    


  
